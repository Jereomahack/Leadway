@model LightWay.Models.Fee

@{
    ViewBag.Title = "Create";
}

@if (ViewBag.Message != null)
{
    <div style="color:green;text-align:center; font-size:20px">
        @ViewBag.Message
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4 style="color:darkblue"><b>NEW PAYMENT</b></h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.PaymentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownListFor(model => model.PaymentType, new SelectListItem[]{
    new SelectListItem() {Text = "Master/Verve/Visa Card", Value="Master/Verve/Visa Card"},
new SelectListItem() {Text = "Bank branch deposit/Quickteller/Phone USSD", Value="Bank branch deposit/Quickteller/Phone USSD"} },"Select Payment Option", new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.PaymentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentReg, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("StudentReg", ViewBag.StudentReg as SelectList, "Select Child Reg No.", new { @class = "form-control input-sm", @id = "Reg" })
                @Html.ValidationMessageFor(model => model.StudentReg, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control input-sm", @id = "Name", @readonly = true } })
                @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.PaymentCat, "Payment Type", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBox("PaymentCat", ViewBag.PaymentCat as string, new { @class = "form-control", @readonly = true })
                    @Html.ValidationMessageFor(model => model.PaymentCat, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PaymentSubCat, "Sub", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    @Html.TextBox("PaymentSubCat", ViewBag.PaymentSubCat as string, new { @class = "form-control", @readonly = true })
                    @Html.ValidationMessageFor(model => model.PaymentSubCat, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.AccTerm, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("AccTerm", ViewBag.AccTerm as SelectList, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.AccTerm, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AccSession, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("AccSession", ViewBag.AccSession as SelectList, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.AccSession, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.amount, "Amount(NGN)", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextBox("Amt", ViewBag.Amt as string, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.TextBox("Email", ViewBag.Email as string, new { @class = "form-control input-sm" })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Proceed" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<script type="text/javascript">
        $(document).ready(function () {
            $("#ddCat").change(function () {
                var CatItem = $(this).val();
                var SubItem = $("#ddSub");
                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetSub", "Fees"))",
                    data: { "Cat": CatItem },
                    success: function (data) {
                        SubItem.html('');
                        $.each(data, function (id, option) {
                            SubItem.append($('<option></option>').val(option.SubCatName).html(option.SubCatName));
                        });
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Sub.');
                    }
                });
            });
            $("#Reg").change(function () {
                var RegNo = $(this).val();

                $.ajax({
                    cache: false,
                    type: "GET",
                    url: "@(Url.Action("GetSub", "Fees"))",
                    data: { "Reg": RegNo },
                    success: function (data) {
                        $("#Name").val(data.Surname + " " + data.OtherName);
                    },
                    error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve Child Name.');
                    }
                });
            });
        });
</script>




