@model LightWay.Models.Deduction

@{
    ViewBag.Title = "Edit";
}



@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Deduction</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)

        @if (Model.Statues == "Closed")
        {
            <div class="form-group">
                @Html.LabelFor(model => model.StaffNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StaffNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeductionType, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeductionType, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.DeductionType, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeductionAmount, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.DeductionAmount, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.DeductionAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                </div>
            </div>

        }
        else if (Model.Statues == "Open")
        {
            <div class="form-group ">
                <p class="control-label col-md-4"><b>Staff Number</b></p>
                <div class="col-md-8">
                    @Html.TextBox("Number", ViewBag.Number as string, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>
            <div class="form-group ">
                <p class="control-label col-md-4"><b>Staff Name</b></p>
                <div class="col-md-8">
                    @Html.TextBox("Name", ViewBag.Name as string, new { @class = "form-control", @readonly = "true" })
                </div>
            </div>
            <div class="form-group ">
                @Html.LabelFor(model => model.DeductionType, "Deduction Type", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("Type", ViewBag.Type as SelectList, "Select Deduction Type", new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })*@
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.DeductionAmount, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.EditorFor(model => model.DeductionAmount, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.DeductionAmount, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group ">
                @Html.LabelFor(model => model.Session, "Session", htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownList("Session", ViewBag.Session as SelectList, "Select session", new { @class = "form-control" })
                    @*@Html.ValidationMessageFor(model => model.Subject, "", new { @class = "text-danger" })*@
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Term, new SelectListItem[]{
                new SelectListItem() {Text = "FIRST", Value="FIRST"},
                 new SelectListItem() {Text = "SECOND", Value="SECOND"},
  new SelectListItem() {Text = "THIRD", Value="THIRD"} }, "Select Term", new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-4" })
                <div class="col-md-8">
                    @Html.DropDownListFor(model => model.Month, new SelectListItem[]{
                new SelectListItem() {Text = "January", Value="January"},
                 new SelectListItem() {Text = "Febuary", Value="Febuary"},
                  new SelectListItem() {Text = "March", Value="March"},
                   new SelectListItem() {Text = "April", Value="April"},
                    new SelectListItem() {Text = "May", Value="May"},
                     new SelectListItem() {Text = "June", Value="June"},
                      new SelectListItem() {Text = "July", Value="July"},
                       new SelectListItem() {Text = "August", Value="August"},
                        new SelectListItem() {Text = "September", Value="September"},
                         new SelectListItem() {Text = "October", Value="October"},
                          new SelectListItem() {Text = "November", Value="November"},
  new SelectListItem() {Text = "December", Value="December"} }, "Select Month", new { @class = "form-control" })
                    @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
