@model LightWay.Models.Payment

@{
    ViewBag.Title = "Edit";
}

<div class="panel panel-primary">
    <div class="panel-heading">Update Payment</div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Payment</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.StudentNum, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.StudentNum, new { htmlAttributes = new { @class = "form-control", @readonly = "True" } })
                        @Html.ValidationMessageFor(model => model.StudentNum, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StudentName, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.StudentName, new { htmlAttributes = new { @class = "form-control", @readonly = "True" } })
                        @Html.ValidationMessageFor(model => model.StudentName, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ">
                    <p class="control-label col-md-4"><b>Class</b></p>
                    <div class="col-md-8">
                        @Html.DropDownList("Class", (SelectList)ViewBag.Class, "Select Class", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.DropDownListFor(model => model.Term, new SelectListItem[]{
                new SelectListItem() {Text = "FIRST", Value="FIRST"},
                 new SelectListItem() {Text = "SECOND", Value="SECOND"},
  new SelectListItem() {Text = "THIRD", Value="THIRD"} }, "Select Term", new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group ">
                    <p class="control-label col-md-4"><b>Academic Year</b></p>
                    <div class="col-md-8">
                        @Html.DropDownList("Session", (SelectList)ViewBag.Session, "Select Session", new { @class = "form-control" })
                    </div>
                </div>
                <div class="form-group ">
                    <p class="control-label col-md-4"><b>Payment Type</b></p>
                    <div class="col-md-8">
                        @Html.DropDownList("PaymentFor", (SelectList)ViewBag.PaymentType, "Select Payment Type", new { @class = "form-control" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-4" })
                    <div class="col-md-8">
                        @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Save" class="btn btn-primary" />
                    </div>
                </div>
            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
</div>





@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
