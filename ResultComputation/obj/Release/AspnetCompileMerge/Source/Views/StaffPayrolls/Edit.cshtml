@model LightWay.Models.StaffPayroll

@{
    ViewBag.Title = "Edit";
}

<div class="panel panel-primary">
    <div class="panel-heading"> Edit Staff Salary</div>
    <div class="panel-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                <h4>Staff Pay roll</h4>
                <hr />
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                @Html.HiddenFor(model => model.Id)

                <div class="form-group">
                    @Html.LabelFor(model => model.StaffNumber, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StaffNumber, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.StaffNumber, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StaffName, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StaffName, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.StaffName, "", new { @class = "text-danger" })
                    </div>
                </div>

                @if (Model.Balance == 0)
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                        </div>
                    </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                                            </div>
                                        </div>


                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                }
                else
                {
                    <div class="form-group">
                        @Html.LabelFor(model => model.Session, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Session, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                            @Html.ValidationMessageFor(model => model.Session, "", new { @class = "text-danger" })
                        </div>
                    </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Term, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Term, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.Term, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Month, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Month, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                                                @Html.ValidationMessageFor(model => model.Month, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
                                            </div>
                                        </div>

                                        <div class="form-group">
                                            @Html.LabelFor(model => model.Balance, htmlAttributes: new { @class = "control-label col-md-2" })
                                            <div class="col-md-10">
                                                @Html.EditorFor(model => model.Balance, new { htmlAttributes = new { @class = "form-control" } })
                                                @Html.ValidationMessageFor(model => model.Balance, "", new { @class = "text-danger" })
                                            </div>
                                        </div>
                }

                @if (Model.Balance != 0)
                {
                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Save" class="btn btn-primary" />
                        </div>
                    </div>
                }

            </div>
        }

        <div>
            @Html.ActionLink("Back to List", "IndexAll")
        </div>
    </div>
</div>







@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
