@model LightWay.Models.Expenditure

@{
    ViewBag.Title = "Edit";
}

<div class="panel panel-primary">
    <div class="panel-heading">Index</div>
    <div class="panel-body">
        @using (Html.BeginForm("Edit", "Expenditures", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Expenditure</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.Id)
            @Html.HiddenFor(model => model.DateRecorded)

            @if (User.IsInRole("Accountant"))
            {
                <div class="form-group">
                    @Html.LabelFor(model => model.AmountRequested, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AmountRequested, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.AmountRequested, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Vissibility, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Vissibility, new SelectListItem[]{
new SelectListItem() {Text = "Accountant", Value="Accountant"},
new SelectListItem() {Text = "Principal", Value="Principal"},
new SelectListItem() {Text = "Proprietor", Value="Proprietor"} }, "Select Reciever", new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Vissibility, "", new { @class = "text-danger" })
                    </div>
                </div>
            }
            else if (User.IsInRole("Principal"))
            {

                <div class="form-group">
                    @Html.LabelFor(model => model.AmountRequested, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.AmountRequested, new { htmlAttributes = new { @class = "form-control", @readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.AmountRequested, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Purpose, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Purpose, new { htmlAttributes = new { @class = "form-control", @Readonly = "true" } })
                        @Html.ValidationMessageFor(model => model.Purpose, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DeclineReason, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.TextAreaFor(model => model.DeclineReason, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.DeclineReason, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Vissibility, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Vissibility, new SelectListItem[]{
new SelectListItem() {Text = "Accountant", Value="Accountant"},
new SelectListItem() {Text = "Admin", Value="Admin"},
new SelectListItem() {Text = "Proprietor", Value="Proprietor"} }, "Select Reciever", new { @class = "form-control" })
                        @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                        @Html.ValidationMessageFor(model => model.Vissibility, "", new { @class = "text-danger" })
                    </div>
                </div>
            }

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
        }

        <div>
            @Html.ActionLink("Back to List", "Index")
        </div>

    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
