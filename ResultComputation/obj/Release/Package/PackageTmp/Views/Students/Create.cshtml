@model LightWay.Models.Student

@{
    ViewBag.Title = "Create";
}

@*<h2><b><span style="color:darkseagreen;font-family:Calibri;font-size:large">Student Registration</span></b></h2>*@

<div class="panel panel-primary">
    <div class="panel-heading">STUDENT REGISTRATION FORM</div>
    <div class="panel-body">
        <fieldset>
            @using (Html.BeginForm("Create", "Students", FormMethod.Post, new { @class = "form-horizontal", enctype = "multipart/form-data", role = "form" }))
            {
                @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @*<h4>Student</h4>*@
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <p style="color:red; font-size:20px" class="col-md-offset-2">Student Details</p>
                </div>
                                    <div style="color:red">
                                        @ViewBag.ErrorInStudtNum
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.StudentNumber,"Admission Number", htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.StudentNumber, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.StudentNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Surname, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Surname, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.Surname, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.OtherName, htmlAttributes: new { @class = " control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.OtherName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.OtherName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(model => model.Gender, new SelectListItem[]{
                new SelectListItem() {Text = "Male", Value="Male"},
  new SelectListItem() {Text = "Female", Value="Female"} }, "Select Gender", new { @class = "form-control input-sm" })
                                            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.DOB, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.DOB, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.DOB, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Category, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(model => model.Category, new SelectListItem[]{
                                           new SelectListItem() {Text = "Senior", Value="Senior"},
                new SelectListItem() {Text = "Junior", Value="Junior"},
                                   new SelectListItem() {Text = "Primary", Value="Primary"},
                                    new SelectListItem() {Text = "Nursery", Value="Nursery"},
                                    new SelectListItem() {Text = "Pre-Nursery", Value="Pre-Nursery"}}, "Select Category", new { @class = "form-control input-sm" })
                                            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.Category, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group ">
                                        <p class="control-label col-md-4"><b>Class</b></p>
                                        <div class="col-md-6">
                                            @Html.DropDownList("Class", (SelectList)ViewBag.ClassListFiter, "Select class", new { @class = "form-control" })
                                        </div>
                                    </div>

                                    <p style="color:red; font-size:20px" class="col-md-offset-2">Parent Details</p>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GuardianName, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.GuardianName, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.GuardianName, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GuardianAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.GuardianAddress, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.GuardianAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.EmailAddress, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.EmailAddress, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.EmailAddress, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.PhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.AlternativePhoneNumber, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.AlternativePhoneNumber, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.AlternativePhoneNumber, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <p style="color:red; font-size:20px" class="col-md-offset-2">Health Details</p>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Weight, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Weight, new { htmlAttributes = new { @class = "form-control input-sm" } })
                                            @Html.ValidationMessageFor(model => model.Weight, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Height, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.Height, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.Height, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.GeneralSactisfaaction, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.EditorFor(model => model.GeneralSactisfaaction, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model.GeneralSactisfaaction, "", new { @class = "text-danger" })
                                        </div>
                                    </div>


                                    <p style="color:red; font-size:20px" class="col-md-offset-2">Others</p>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.CheckResult, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            @Html.DropDownListFor(model => model.CheckResult, new SelectListItem[]{
                new SelectListItem() {Text = "Allow", Value="Allow"},
  new SelectListItem() {Text = "Not Allowed", Value="Not Allowed"} }, new { @class = "form-control input-sm" })
                                            @*@Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })*@
                                            @Html.ValidationMessageFor(model => model.CheckResult, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model.Passport, htmlAttributes: new { @class = "control-label col-md-4" })
                                        <div class="col-md-6">
                                            <input type="file" name="File">
                                            @*@Html.EditorFor(model => model.CACCert, new { htmlAttributes = new { @class = "form-control", @type = "file" } })*@
                                            @Html.ValidationMessageFor(model => model.Passport, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div>
                                        @ViewBag.message
                                    </div>

                                    <div class="form-group">
                                        <div class="col-md-offset-2 col-md-10">
                                            <input type="submit" value="Create" class="btn btn-primary" />
                                        </div>
                                    </div>
            }

            <div>
                @Html.ActionLink("Back to List", "Index")
            </div>

            @section Scripts {
                @Scripts.Render("~/bundles/jqueryval")
            }

        </fieldset>
    </div>
</div>

































